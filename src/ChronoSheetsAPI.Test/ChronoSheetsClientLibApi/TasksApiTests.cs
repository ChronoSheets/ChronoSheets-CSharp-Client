/* 
 * ChronoSheets API
 *
 * ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.
 *
 * OpenAPI spec version: v1
 * Contact: lachlan@chronosheets.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ChronoSheetsAPI.Client;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing TasksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TasksApiTests
    {
        private TasksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TasksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TasksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TasksApi
            //Assert.IsInstanceOfType(typeof(TasksApi), instance, "instance is a TasksApi");
        }

        
        /// <summary>
        /// Test TasksCreateTask
        /// </summary>
        [Test]
        public void TasksCreateTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CsApiInsertTaskRequest request = null;
            //string xChronosheetsAuth = null;
            //var response = instance.TasksCreateTask(request, xChronosheetsAuth);
            //Assert.IsInstanceOf<CsApiApiResponseInt32> (response, "response is CsApiApiResponseInt32");
        }
        
        /// <summary>
        /// Test TasksDeleteTask
        /// </summary>
        [Test]
        public void TasksDeleteTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskId = null;
            //string xChronosheetsAuth = null;
            //var response = instance.TasksDeleteTask(taskId, xChronosheetsAuth);
            //Assert.IsInstanceOf<CsApiApiResponseBoolean> (response, "response is CsApiApiResponseBoolean");
        }
        
        /// <summary>
        /// Test TasksGetTaskById
        /// </summary>
        [Test]
        public void TasksGetTaskByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskId = null;
            //string xChronosheetsAuth = null;
            //var response = instance.TasksGetTaskById(taskId, xChronosheetsAuth);
            //Assert.IsInstanceOf<CsApiApiResponseTimesheetTask> (response, "response is CsApiApiResponseTimesheetTask");
        }
        
        /// <summary>
        /// Test TasksGetTasks
        /// </summary>
        [Test]
        public void TasksGetTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xChronosheetsAuth = null;
            //var response = instance.TasksGetTasks(xChronosheetsAuth);
            //Assert.IsInstanceOf<CsApiApiResponseListTimesheetTask> (response, "response is CsApiApiResponseListTimesheetTask");
        }
        
        /// <summary>
        /// Test TasksGetTasksForJob
        /// </summary>
        [Test]
        public void TasksGetTasksForJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobId = null;
            //string xChronosheetsAuth = null;
            //var response = instance.TasksGetTasksForJob(jobId, xChronosheetsAuth);
            //Assert.IsInstanceOf<CsApiApiResponseListTimesheetTask> (response, "response is CsApiApiResponseListTimesheetTask");
        }
        
        /// <summary>
        /// Test TasksUpdateTask
        /// </summary>
        [Test]
        public void TasksUpdateTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CsApiUpdateTaskRequest request = null;
            //string xChronosheetsAuth = null;
            //var response = instance.TasksUpdateTask(request, xChronosheetsAuth);
            //Assert.IsInstanceOf<CsApiApiResponseBoolean> (response, "response is CsApiApiResponseBoolean");
        }
        
    }

}

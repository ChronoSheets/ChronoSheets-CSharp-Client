/* 
 * ChronoSheets API
 *
 * ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.
 *
 * OpenAPI spec version: v1
 * Contact: lachlan@chronosheets.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ChronoSheetsAPI.Client;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing ProjectsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProjectsApiTests
    {
        private ProjectsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProjectsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProjectsApi
            //Assert.IsInstanceOfType(typeof(ProjectsApi), instance, "instance is a ProjectsApi");
        }

        
        /// <summary>
        /// Test ProjectsCreateProject
        /// </summary>
        [Test]
        public void ProjectsCreateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CSInsertProjectRequest request = null;
            //string xChronosheetsAuth = null;
            //var response = instance.ProjectsCreateProject(request, xChronosheetsAuth);
            //Assert.IsInstanceOf<CSApiResponseInt32> (response, "response is CSApiResponseInt32");
        }
        
        /// <summary>
        /// Test ProjectsGetProjectById
        /// </summary>
        [Test]
        public void ProjectsGetProjectByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? projectId = null;
            //string xChronosheetsAuth = null;
            //var response = instance.ProjectsGetProjectById(projectId, xChronosheetsAuth);
            //Assert.IsInstanceOf<CSApiResponseProject> (response, "response is CSApiResponseProject");
        }
        
        /// <summary>
        /// Test ProjectsGetProjectsForClient
        /// </summary>
        [Test]
        public void ProjectsGetProjectsForClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? clientId = null;
            //string xChronosheetsAuth = null;
            //var response = instance.ProjectsGetProjectsForClient(clientId, xChronosheetsAuth);
            //Assert.IsInstanceOf<CSApiResponseListProject> (response, "response is CSApiResponseListProject");
        }
        
        /// <summary>
        /// Test ProjectsUpdateProject
        /// </summary>
        [Test]
        public void ProjectsUpdateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CSUpdateProjectRequest request = null;
            //string xChronosheetsAuth = null;
            //var response = instance.ProjectsUpdateProject(request, xChronosheetsAuth);
            //Assert.IsInstanceOf<CSApiResponseBoolean> (response, "response is CSApiResponseBoolean");
        }
        
    }

}

/* 
 * ChronoSheets API
 *
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;
using ChronoSheetsAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing CombinedReportsData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CombinedReportsDataTests
    {
        // TODO uncomment below to declare an instance variable for CombinedReportsData
        //private CombinedReportsData instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CombinedReportsData
            //instance = new CombinedReportsData();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CombinedReportsData
        /// </summary>
        [Test]
        public void CombinedReportsDataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" CombinedReportsData
            //Assert.IsInstanceOf(typeof(CombinedReportsData), instance);
        }


        /// <summary>
        /// Test the property 'SeriesJobCodes'
        /// </summary>
        [Test]
        public void SeriesJobCodesTest()
        {
            // TODO unit test for the property 'SeriesJobCodes'
        }
        /// <summary>
        /// Test the property 'SeriesTasks'
        /// </summary>
        [Test]
        public void SeriesTasksTest()
        {
            // TODO unit test for the property 'SeriesTasks'
        }
        /// <summary>
        /// Test the property 'SeriesClients'
        /// </summary>
        [Test]
        public void SeriesClientsTest()
        {
            // TODO unit test for the property 'SeriesClients'
        }
        /// <summary>
        /// Test the property 'SeriesProjects'
        /// </summary>
        [Test]
        public void SeriesProjectsTest()
        {
            // TODO unit test for the property 'SeriesProjects'
        }
        /// <summary>
        /// Test the property 'TotalsJobCodes'
        /// </summary>
        [Test]
        public void TotalsJobCodesTest()
        {
            // TODO unit test for the property 'TotalsJobCodes'
        }
        /// <summary>
        /// Test the property 'TotalsTasks'
        /// </summary>
        [Test]
        public void TotalsTasksTest()
        {
            // TODO unit test for the property 'TotalsTasks'
        }
        /// <summary>
        /// Test the property 'TotalsClients'
        /// </summary>
        [Test]
        public void TotalsClientsTest()
        {
            // TODO unit test for the property 'TotalsClients'
        }
        /// <summary>
        /// Test the property 'TotalsProjects'
        /// </summary>
        [Test]
        public void TotalsProjectsTest()
        {
            // TODO unit test for the property 'TotalsProjects'
        }

    }

}

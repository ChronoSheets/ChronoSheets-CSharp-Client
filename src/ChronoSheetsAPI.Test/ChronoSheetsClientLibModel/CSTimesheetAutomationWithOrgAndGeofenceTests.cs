/* 
 * ChronoSheets API
 *
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;
using ChronoSheetsAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing CSTimesheetAutomationWithOrgAndGeofence
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CSTimesheetAutomationWithOrgAndGeofenceTests
    {
        // TODO uncomment below to declare an instance variable for CSTimesheetAutomationWithOrgAndGeofence
        //private CSTimesheetAutomationWithOrgAndGeofence instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CSTimesheetAutomationWithOrgAndGeofence
            //instance = new CSTimesheetAutomationWithOrgAndGeofence();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CSTimesheetAutomationWithOrgAndGeofence
        /// </summary>
        [Test]
        public void CSTimesheetAutomationWithOrgAndGeofenceInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CSTimesheetAutomationWithOrgAndGeofence
            //Assert.IsInstanceOfType<CSTimesheetAutomationWithOrgAndGeofence> (instance, "variable 'instance' is a CSTimesheetAutomationWithOrgAndGeofence");
        }


        /// <summary>
        /// Test the property 'OrgId'
        /// </summary>
        [Test]
        public void OrgIdTest()
        {
            // TODO unit test for the property 'OrgId'
        }
        /// <summary>
        /// Test the property 'GeofenceName'
        /// </summary>
        [Test]
        public void GeofenceNameTest()
        {
            // TODO unit test for the property 'GeofenceName'
        }
        /// <summary>
        /// Test the property 'Coordinates'
        /// </summary>
        [Test]
        public void CoordinatesTest()
        {
            // TODO unit test for the property 'Coordinates'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'UserName'
        /// </summary>
        [Test]
        public void UserNameTest()
        {
            // TODO unit test for the property 'UserName'
        }
        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Test]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Test]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'AutomationId'
        /// </summary>
        [Test]
        public void AutomationIdTest()
        {
            // TODO unit test for the property 'AutomationId'
        }
        /// <summary>
        /// Test the property 'AutomationActionType'
        /// </summary>
        [Test]
        public void AutomationActionTypeTest()
        {
            // TODO unit test for the property 'AutomationActionType'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Latitude'
        /// </summary>
        [Test]
        public void LatitudeTest()
        {
            // TODO unit test for the property 'Latitude'
        }
        /// <summary>
        /// Test the property 'Longitude'
        /// </summary>
        [Test]
        public void LongitudeTest()
        {
            // TODO unit test for the property 'Longitude'
        }
        /// <summary>
        /// Test the property 'IsProcessed'
        /// </summary>
        [Test]
        public void IsProcessedTest()
        {
            // TODO unit test for the property 'IsProcessed'
        }
        /// <summary>
        /// Test the property 'Expires'
        /// </summary>
        [Test]
        public void ExpiresTest()
        {
            // TODO unit test for the property 'Expires'
        }
        /// <summary>
        /// Test the property 'ClientDateTime'
        /// </summary>
        [Test]
        public void ClientDateTimeTest()
        {
            // TODO unit test for the property 'ClientDateTime'
        }

    }

}

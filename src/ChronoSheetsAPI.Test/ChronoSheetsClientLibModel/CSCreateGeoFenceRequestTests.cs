/* 
 * ChronoSheets API
 *
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;
using ChronoSheetsAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing CSCreateGeoFenceRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CSCreateGeoFenceRequestTests
    {
        // TODO uncomment below to declare an instance variable for CSCreateGeoFenceRequest
        //private CSCreateGeoFenceRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CSCreateGeoFenceRequest
            //instance = new CSCreateGeoFenceRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CSCreateGeoFenceRequest
        /// </summary>
        [Test]
        public void CSCreateGeoFenceRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CSCreateGeoFenceRequest
            //Assert.IsInstanceOfType<CSCreateGeoFenceRequest> (instance, "variable 'instance' is a CSCreateGeoFenceRequest");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'FenceCoordinates'
        /// </summary>
        [Test]
        public void FenceCoordinatesTest()
        {
            // TODO unit test for the property 'FenceCoordinates'
        }
        /// <summary>
        /// Test the property 'TriggerJobCodeId'
        /// </summary>
        [Test]
        public void TriggerJobCodeIdTest()
        {
            // TODO unit test for the property 'TriggerJobCodeId'
        }
        /// <summary>
        /// Test the property 'TriggerTaskId'
        /// </summary>
        [Test]
        public void TriggerTaskIdTest()
        {
            // TODO unit test for the property 'TriggerTaskId'
        }
        /// <summary>
        /// Test the property 'SendAlertToOrgGroupId'
        /// </summary>
        [Test]
        public void SendAlertToOrgGroupIdTest()
        {
            // TODO unit test for the property 'SendAlertToOrgGroupId'
        }
        /// <summary>
        /// Test the property 'AlertSettings'
        /// </summary>
        [Test]
        public void AlertSettingsTest()
        {
            // TODO unit test for the property 'AlertSettings'
        }
        /// <summary>
        /// Test the property 'TriggerSettings'
        /// </summary>
        [Test]
        public void TriggerSettingsTest()
        {
            // TODO unit test for the property 'TriggerSettings'
        }
        /// <summary>
        /// Test the property 'StartTimeHour'
        /// </summary>
        [Test]
        public void StartTimeHourTest()
        {
            // TODO unit test for the property 'StartTimeHour'
        }
        /// <summary>
        /// Test the property 'StartTimeMinute'
        /// </summary>
        [Test]
        public void StartTimeMinuteTest()
        {
            // TODO unit test for the property 'StartTimeMinute'
        }
        /// <summary>
        /// Test the property 'EndTimeHour'
        /// </summary>
        [Test]
        public void EndTimeHourTest()
        {
            // TODO unit test for the property 'EndTimeHour'
        }
        /// <summary>
        /// Test the property 'EndTimeMinute'
        /// </summary>
        [Test]
        public void EndTimeMinuteTest()
        {
            // TODO unit test for the property 'EndTimeMinute'
        }

    }

}

/* 
 * The ChronoSheets API
 *
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  </p>  <p>      First Steps:       <ol>          <li>Make sure you've <a href='/HomeV2/App/sign-up'>signed up to ChronoSheets</a> to get yourself a user account</li>          <li>Confirm your account by following the link sent to your email address.  This will activate your account</li>          <li>Use your username and password to obtain an Auth Token by using the DoLogin method inside the UserProfile section below.  Use the Auth Token as an argument to the other methods</li>          <li>Try different methods in the API Playground to learn about the API</li>          <li>If you're stuck, try the full getting started guide on the <a href='/Home/ApiDocs'>API Toolkit</a> page.</li>      </ol>  </p>  <p>      Further Steps:       <ul>          <li>Create a mobile app (iOS, Android or Windows) using one of the ChronoSheets Mobile SDKs</li>          <li>Create a custom integration with your app using one of the ChronoSheets API Client Libraries.</li>      </ul>      Read more about the API Toolkit on the <a href='/Home/ApiDocs'>API Toolkit</a> page.  </p></div>
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;
using ChronoSheetsAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing CSRawReportItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CSRawReportItemTests
    {
        // TODO uncomment below to declare an instance variable for CSRawReportItem
        //private CSRawReportItem instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CSRawReportItem
            //instance = new CSRawReportItem();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CSRawReportItem
        /// </summary>
        [Test]
        public void CSRawReportItemInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CSRawReportItem
            //Assert.IsInstanceOfType<CSRawReportItem> (instance, "variable 'instance' is a CSRawReportItem");
        }


        /// <summary>
        /// Test the property 'OrganisationId'
        /// </summary>
        [Test]
        public void OrganisationIdTest()
        {
            // TODO unit test for the property 'OrganisationId'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Test]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'EmailAddress'
        /// </summary>
        [Test]
        public void EmailAddressTest()
        {
            // TODO unit test for the property 'EmailAddress'
        }
        /// <summary>
        /// Test the property 'JobCode'
        /// </summary>
        [Test]
        public void JobCodeTest()
        {
            // TODO unit test for the property 'JobCode'
        }
        /// <summary>
        /// Test the property 'TaskName'
        /// </summary>
        [Test]
        public void TaskNameTest()
        {
            // TODO unit test for the property 'TaskName'
        }
        /// <summary>
        /// Test the property 'ClientName'
        /// </summary>
        [Test]
        public void ClientNameTest()
        {
            // TODO unit test for the property 'ClientName'
        }
        /// <summary>
        /// Test the property 'ProjectName'
        /// </summary>
        [Test]
        public void ProjectNameTest()
        {
            // TODO unit test for the property 'ProjectName'
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Test]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Test]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }
        /// <summary>
        /// Test the property 'SpanSeconds'
        /// </summary>
        [Test]
        public void SpanSecondsTest()
        {
            // TODO unit test for the property 'SpanSeconds'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'PayAmount'
        /// </summary>
        [Test]
        public void PayAmountTest()
        {
            // TODO unit test for the property 'PayAmount'
        }
        /// <summary>
        /// Test the property 'PayOvertimeAmount'
        /// </summary>
        [Test]
        public void PayOvertimeAmountTest()
        {
            // TODO unit test for the property 'PayOvertimeAmount'
        }
        /// <summary>
        /// Test the property 'TripCost'
        /// </summary>
        [Test]
        public void TripCostTest()
        {
            // TODO unit test for the property 'TripCost'
        }
        /// <summary>
        /// Test the property 'TripDistanceMeters'
        /// </summary>
        [Test]
        public void TripDistanceMetersTest()
        {
            // TODO unit test for the property 'TripDistanceMeters'
        }

    }

}

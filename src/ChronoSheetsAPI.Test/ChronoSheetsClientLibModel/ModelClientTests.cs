/* 
 * ChronoSheets API
 *
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ChronoSheetsAPI.ChronoSheetsClientLibApi;
using ChronoSheetsAPI.ChronoSheetsClientLibModel;
using ChronoSheetsAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ChronoSheetsAPI.Test
{
    /// <summary>
    ///  Class for testing ModelClient
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModelClientTests
    {
        // TODO uncomment below to declare an instance variable for ModelClient
        //private ModelClient instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ModelClient
            //instance = new ModelClient();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelClient
        /// </summary>
        [Test]
        public void ModelClientInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ModelClient
            //Assert.IsInstanceOf(typeof(ModelClient), instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'OrganisationId'
        /// </summary>
        [Test]
        public void OrganisationIdTest()
        {
            // TODO unit test for the property 'OrganisationId'
        }
        /// <summary>
        /// Test the property 'ClientName'
        /// </summary>
        [Test]
        public void ClientNameTest()
        {
            // TODO unit test for the property 'ClientName'
        }
        /// <summary>
        /// Test the property 'ClientAddressLine1'
        /// </summary>
        [Test]
        public void ClientAddressLine1Test()
        {
            // TODO unit test for the property 'ClientAddressLine1'
        }
        /// <summary>
        /// Test the property 'ClientAddressLine2'
        /// </summary>
        [Test]
        public void ClientAddressLine2Test()
        {
            // TODO unit test for the property 'ClientAddressLine2'
        }
        /// <summary>
        /// Test the property 'ClientSuburb'
        /// </summary>
        [Test]
        public void ClientSuburbTest()
        {
            // TODO unit test for the property 'ClientSuburb'
        }
        /// <summary>
        /// Test the property 'ClientState'
        /// </summary>
        [Test]
        public void ClientStateTest()
        {
            // TODO unit test for the property 'ClientState'
        }
        /// <summary>
        /// Test the property 'ClientPostCode'
        /// </summary>
        [Test]
        public void ClientPostCodeTest()
        {
            // TODO unit test for the property 'ClientPostCode'
        }
        /// <summary>
        /// Test the property 'PersonOfContact'
        /// </summary>
        [Test]
        public void PersonOfContactTest()
        {
            // TODO unit test for the property 'PersonOfContact'
        }
        /// <summary>
        /// Test the property 'ClientPhoneNumber'
        /// </summary>
        [Test]
        public void ClientPhoneNumberTest()
        {
            // TODO unit test for the property 'ClientPhoneNumber'
        }
        /// <summary>
        /// Test the property 'ClientMobileNumber'
        /// </summary>
        [Test]
        public void ClientMobileNumberTest()
        {
            // TODO unit test for the property 'ClientMobileNumber'
        }
        /// <summary>
        /// Test the property 'ClientEmailAddress'
        /// </summary>
        [Test]
        public void ClientEmailAddressTest()
        {
            // TODO unit test for the property 'ClientEmailAddress'
        }
        /// <summary>
        /// Test the property 'ClientWebURL'
        /// </summary>
        [Test]
        public void ClientWebURLTest()
        {
            // TODO unit test for the property 'ClientWebURL'
        }
        /// <summary>
        /// Test the property 'ProjectCount'
        /// </summary>
        [Test]
        public void ProjectCountTest()
        {
            // TODO unit test for the property 'ProjectCount'
        }

    }

}

/* 
 * ChronoSheets API
 *
 * ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.
 *
 * OpenAPI spec version: v1
 * Contact: lachlan@chronosheets.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ChronoSheetsAPI.Client.SwaggerDateConverter;

namespace ChronoSheetsAPI.ChronoSheetsClientLibModel
{
    /// <summary>
    /// CsApiCreateTripRequest
    /// </summary>
    [DataContract]
    public partial class CsApiCreateTripRequest :  IEquatable<CsApiCreateTripRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines MobilePlatform
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MobilePlatformEnum
        {
            
            /// <summary>
            /// Enum Unknown for value: Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            Unknown = 1,
            
            /// <summary>
            /// Enum IOS for value: iOS
            /// </summary>
            [EnumMember(Value = "iOS")]
            IOS = 2,
            
            /// <summary>
            /// Enum Android for value: Android
            /// </summary>
            [EnumMember(Value = "Android")]
            Android = 3
        }

        /// <summary>
        /// Gets or Sets MobilePlatform
        /// </summary>
        [DataMember(Name="MobilePlatform", EmitDefaultValue=false)]
        public MobilePlatformEnum? MobilePlatform { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CsApiCreateTripRequest" /> class.
        /// </summary>
        /// <param name="TimesheetId">TimesheetId.</param>
        /// <param name="VehicleId">VehicleId.</param>
        /// <param name="PathCoordsStringCsv">PathCoordsStringCsv.</param>
        /// <param name="DistanceMeters">DistanceMeters.</param>
        /// <param name="MobilePlatform">MobilePlatform.</param>
        public CsApiCreateTripRequest(int? TimesheetId = default(int?), int? VehicleId = default(int?), string PathCoordsStringCsv = default(string), double? DistanceMeters = default(double?), MobilePlatformEnum? MobilePlatform = default(MobilePlatformEnum?))
        {
            this.TimesheetId = TimesheetId;
            this.VehicleId = VehicleId;
            this.PathCoordsStringCsv = PathCoordsStringCsv;
            this.DistanceMeters = DistanceMeters;
            this.MobilePlatform = MobilePlatform;
        }
        
        /// <summary>
        /// Gets or Sets TimesheetId
        /// </summary>
        [DataMember(Name="TimesheetId", EmitDefaultValue=false)]
        public int? TimesheetId { get; set; }

        /// <summary>
        /// Gets or Sets VehicleId
        /// </summary>
        [DataMember(Name="VehicleId", EmitDefaultValue=false)]
        public int? VehicleId { get; set; }

        /// <summary>
        /// Gets or Sets PathCoordsStringCsv
        /// </summary>
        [DataMember(Name="PathCoordsStringCsv", EmitDefaultValue=false)]
        public string PathCoordsStringCsv { get; set; }

        /// <summary>
        /// Gets or Sets DistanceMeters
        /// </summary>
        [DataMember(Name="DistanceMeters", EmitDefaultValue=false)]
        public double? DistanceMeters { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CsApiCreateTripRequest {\n");
            sb.Append("  TimesheetId: ").Append(TimesheetId).Append("\n");
            sb.Append("  VehicleId: ").Append(VehicleId).Append("\n");
            sb.Append("  PathCoordsStringCsv: ").Append(PathCoordsStringCsv).Append("\n");
            sb.Append("  DistanceMeters: ").Append(DistanceMeters).Append("\n");
            sb.Append("  MobilePlatform: ").Append(MobilePlatform).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CsApiCreateTripRequest);
        }

        /// <summary>
        /// Returns true if CsApiCreateTripRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CsApiCreateTripRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CsApiCreateTripRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TimesheetId == input.TimesheetId ||
                    (this.TimesheetId != null &&
                    this.TimesheetId.Equals(input.TimesheetId))
                ) && 
                (
                    this.VehicleId == input.VehicleId ||
                    (this.VehicleId != null &&
                    this.VehicleId.Equals(input.VehicleId))
                ) && 
                (
                    this.PathCoordsStringCsv == input.PathCoordsStringCsv ||
                    (this.PathCoordsStringCsv != null &&
                    this.PathCoordsStringCsv.Equals(input.PathCoordsStringCsv))
                ) && 
                (
                    this.DistanceMeters == input.DistanceMeters ||
                    (this.DistanceMeters != null &&
                    this.DistanceMeters.Equals(input.DistanceMeters))
                ) && 
                (
                    this.MobilePlatform == input.MobilePlatform ||
                    (this.MobilePlatform != null &&
                    this.MobilePlatform.Equals(input.MobilePlatform))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TimesheetId != null)
                    hashCode = hashCode * 59 + this.TimesheetId.GetHashCode();
                if (this.VehicleId != null)
                    hashCode = hashCode * 59 + this.VehicleId.GetHashCode();
                if (this.PathCoordsStringCsv != null)
                    hashCode = hashCode * 59 + this.PathCoordsStringCsv.GetHashCode();
                if (this.DistanceMeters != null)
                    hashCode = hashCode * 59 + this.DistanceMeters.GetHashCode();
                if (this.MobilePlatform != null)
                    hashCode = hashCode * 59 + this.MobilePlatform.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

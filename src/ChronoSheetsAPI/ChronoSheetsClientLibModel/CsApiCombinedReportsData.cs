/* 
 * ChronoSheets API Documentation
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ChronoSheetsAPI.Client.SwaggerDateConverter;

namespace ChronoSheetsAPI.ChronoSheetsClientLibModel
{
    /// <summary>
    /// CsApiCombinedReportsData
    /// </summary>
    [DataContract]
    public partial class CsApiCombinedReportsData :  IEquatable<CsApiCombinedReportsData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CsApiCombinedReportsData" /> class.
        /// </summary>
        /// <param name="SeriesJobCodes">SeriesJobCodes.</param>
        /// <param name="SeriesTasks">SeriesTasks.</param>
        /// <param name="SeriesClients">SeriesClients.</param>
        /// <param name="SeriesProjects">SeriesProjects.</param>
        /// <param name="TotalsJobCodes">TotalsJobCodes.</param>
        /// <param name="TotalsTasks">TotalsTasks.</param>
        /// <param name="TotalsClients">TotalsClients.</param>
        /// <param name="TotalsProjects">TotalsProjects.</param>
        public CsApiCombinedReportsData(List<CsApiJobSeriesReportItem> SeriesJobCodes = default(List<CsApiJobSeriesReportItem>), List<CsApiTaskSeriesReportItem> SeriesTasks = default(List<CsApiTaskSeriesReportItem>), List<CsApiClientSeriesReportItem> SeriesClients = default(List<CsApiClientSeriesReportItem>), List<CsApiProjectSeriesReportItem> SeriesProjects = default(List<CsApiProjectSeriesReportItem>), List<CsApiJobTotalsReportItem> TotalsJobCodes = default(List<CsApiJobTotalsReportItem>), List<CsApiTaskTotalsReportItem> TotalsTasks = default(List<CsApiTaskTotalsReportItem>), List<CsApiClientTotalsReportItem> TotalsClients = default(List<CsApiClientTotalsReportItem>), List<CsApiProjectTotalsReportItem> TotalsProjects = default(List<CsApiProjectTotalsReportItem>))
        {
            this.SeriesJobCodes = SeriesJobCodes;
            this.SeriesTasks = SeriesTasks;
            this.SeriesClients = SeriesClients;
            this.SeriesProjects = SeriesProjects;
            this.TotalsJobCodes = TotalsJobCodes;
            this.TotalsTasks = TotalsTasks;
            this.TotalsClients = TotalsClients;
            this.TotalsProjects = TotalsProjects;
        }
        
        /// <summary>
        /// Gets or Sets SeriesJobCodes
        /// </summary>
        [DataMember(Name="SeriesJobCodes", EmitDefaultValue=false)]
        public List<CsApiJobSeriesReportItem> SeriesJobCodes { get; set; }

        /// <summary>
        /// Gets or Sets SeriesTasks
        /// </summary>
        [DataMember(Name="SeriesTasks", EmitDefaultValue=false)]
        public List<CsApiTaskSeriesReportItem> SeriesTasks { get; set; }

        /// <summary>
        /// Gets or Sets SeriesClients
        /// </summary>
        [DataMember(Name="SeriesClients", EmitDefaultValue=false)]
        public List<CsApiClientSeriesReportItem> SeriesClients { get; set; }

        /// <summary>
        /// Gets or Sets SeriesProjects
        /// </summary>
        [DataMember(Name="SeriesProjects", EmitDefaultValue=false)]
        public List<CsApiProjectSeriesReportItem> SeriesProjects { get; set; }

        /// <summary>
        /// Gets or Sets TotalsJobCodes
        /// </summary>
        [DataMember(Name="TotalsJobCodes", EmitDefaultValue=false)]
        public List<CsApiJobTotalsReportItem> TotalsJobCodes { get; set; }

        /// <summary>
        /// Gets or Sets TotalsTasks
        /// </summary>
        [DataMember(Name="TotalsTasks", EmitDefaultValue=false)]
        public List<CsApiTaskTotalsReportItem> TotalsTasks { get; set; }

        /// <summary>
        /// Gets or Sets TotalsClients
        /// </summary>
        [DataMember(Name="TotalsClients", EmitDefaultValue=false)]
        public List<CsApiClientTotalsReportItem> TotalsClients { get; set; }

        /// <summary>
        /// Gets or Sets TotalsProjects
        /// </summary>
        [DataMember(Name="TotalsProjects", EmitDefaultValue=false)]
        public List<CsApiProjectTotalsReportItem> TotalsProjects { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CsApiCombinedReportsData {\n");
            sb.Append("  SeriesJobCodes: ").Append(SeriesJobCodes).Append("\n");
            sb.Append("  SeriesTasks: ").Append(SeriesTasks).Append("\n");
            sb.Append("  SeriesClients: ").Append(SeriesClients).Append("\n");
            sb.Append("  SeriesProjects: ").Append(SeriesProjects).Append("\n");
            sb.Append("  TotalsJobCodes: ").Append(TotalsJobCodes).Append("\n");
            sb.Append("  TotalsTasks: ").Append(TotalsTasks).Append("\n");
            sb.Append("  TotalsClients: ").Append(TotalsClients).Append("\n");
            sb.Append("  TotalsProjects: ").Append(TotalsProjects).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CsApiCombinedReportsData);
        }

        /// <summary>
        /// Returns true if CsApiCombinedReportsData instances are equal
        /// </summary>
        /// <param name="input">Instance of CsApiCombinedReportsData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CsApiCombinedReportsData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SeriesJobCodes == input.SeriesJobCodes ||
                    this.SeriesJobCodes != null &&
                    this.SeriesJobCodes.SequenceEqual(input.SeriesJobCodes)
                ) && 
                (
                    this.SeriesTasks == input.SeriesTasks ||
                    this.SeriesTasks != null &&
                    this.SeriesTasks.SequenceEqual(input.SeriesTasks)
                ) && 
                (
                    this.SeriesClients == input.SeriesClients ||
                    this.SeriesClients != null &&
                    this.SeriesClients.SequenceEqual(input.SeriesClients)
                ) && 
                (
                    this.SeriesProjects == input.SeriesProjects ||
                    this.SeriesProjects != null &&
                    this.SeriesProjects.SequenceEqual(input.SeriesProjects)
                ) && 
                (
                    this.TotalsJobCodes == input.TotalsJobCodes ||
                    this.TotalsJobCodes != null &&
                    this.TotalsJobCodes.SequenceEqual(input.TotalsJobCodes)
                ) && 
                (
                    this.TotalsTasks == input.TotalsTasks ||
                    this.TotalsTasks != null &&
                    this.TotalsTasks.SequenceEqual(input.TotalsTasks)
                ) && 
                (
                    this.TotalsClients == input.TotalsClients ||
                    this.TotalsClients != null &&
                    this.TotalsClients.SequenceEqual(input.TotalsClients)
                ) && 
                (
                    this.TotalsProjects == input.TotalsProjects ||
                    this.TotalsProjects != null &&
                    this.TotalsProjects.SequenceEqual(input.TotalsProjects)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SeriesJobCodes != null)
                    hashCode = hashCode * 59 + this.SeriesJobCodes.GetHashCode();
                if (this.SeriesTasks != null)
                    hashCode = hashCode * 59 + this.SeriesTasks.GetHashCode();
                if (this.SeriesClients != null)
                    hashCode = hashCode * 59 + this.SeriesClients.GetHashCode();
                if (this.SeriesProjects != null)
                    hashCode = hashCode * 59 + this.SeriesProjects.GetHashCode();
                if (this.TotalsJobCodes != null)
                    hashCode = hashCode * 59 + this.TotalsJobCodes.GetHashCode();
                if (this.TotalsTasks != null)
                    hashCode = hashCode * 59 + this.TotalsTasks.GetHashCode();
                if (this.TotalsClients != null)
                    hashCode = hashCode * 59 + this.TotalsClients.GetHashCode();
                if (this.TotalsProjects != null)
                    hashCode = hashCode * 59 + this.TotalsProjects.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
